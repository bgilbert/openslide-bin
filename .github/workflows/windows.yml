# Reusable workflow for building on Windows

name: Windows

on:
  workflow_call:
    inputs:
      openslide_repo:
        description: Override OpenSlide with this repo
        required: false
        type: string
      openslide_ref:
        description: Override OpenSlide with this openslide_repo ref
        required: false
        type: string
      openslide_java_repo:
        description: Override OpenSlide Java with this repo
        required: false
        type: string
      openslide_java_ref:
        description: Override OpenSlide Java with this openslide_java_repo ref
        required: false
        type: string
      openslide_winbuild_repo:
        description: Use openslide-winbuild from this repo
        required: false
        type: string
        default: openslide/openslide-winbuild
      openslide_winbuild_ref:
        description: Use openslide-winbuild from this ref
        required: false
        type: string
        default: main
      pkgver:
        description: Set package version string
        required: true
        type: string
      werror:
        description: Fail on build warnings in OpenSlide packages
        required: false
        type: boolean
        default: false
    outputs:
      artifact:
        description: The name of the output artifact
        value: ${{ jobs.sdist.outputs.artifact }}

permissions:
  contents: read

jobs:
  sdist:
    name: Build source zip
    runs-on: ubuntu-latest
    container: ghcr.io/bgilbert/winbuild-builder:latest
    outputs:
      artifact: ${{ steps.prep.outputs.artifact }}
      version_suffix: ${{ steps.prep.outputs.version_suffix }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.openslide_winbuild_repo }}
          ref: ${{ inputs.openslide_winbuild_ref }}

      - name: Check out OpenSlide
        if: inputs.openslide_repo != ''
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.openslide_repo }}
          ref: ${{ inputs.openslide_ref }}
          path: override/openslide
          persist-credentials: false
      - name: Check out OpenSlide Java
        if: inputs.openslide_java_repo != ''
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.openslide_java_repo }}
          ref: ${{ inputs.openslide_java_ref }}
          path: override/openslide_java
          persist-credentials: false
      - name: Collect overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        run: tar cf overrides.tar override
      - name: Upload overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        uses: actions/upload-artifact@v3
        with:
          name: build-overrides
          path: overrides.tar

      - name: Cache sources
        uses: actions/cache@v3
        with:
          key: winbuild-tar
          path: |
            meson/subprojects/packagecache
            tar
      - name: Build source zip
        run: ./build.sh -p "${{ inputs.pkgver }}" sdist
      - name: Prep artifact
        id: prep
        run: |
          artifact="openslide-windows-${{ inputs.pkgver }}"
          echo "artifact=$artifact" >> $GITHUB_OUTPUT
          mkdir -p "artifacts/$artifact"
          mv "openslide-winbuild-${{ inputs.pkgver }}.zip" "artifacts/$artifact"
          if [ -d override/openslide ]; then
              suffix=$(git -C override/openslide rev-parse HEAD | cut -c-7)
              echo "version_suffix=$suffix" >> $GITHUB_OUTPUT
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prep.outputs.artifact }}
          path: artifacts

  bdist:
    name: Build
    needs: sdist
    runs-on: ubuntu-latest
    container: ghcr.io/bgilbert/winbuild-builder:latest
    strategy:
      matrix:
        bits: [32, 64]
    steps:
      - name: Download source zip
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.sdist.outputs.artifact }}
      - name: Unpack source zip
        run: |
          (cd "${{ needs.sdist.outputs.artifact }}" &&
              unzip "openslide-winbuild-${{ inputs.pkgver }}.zip")
          mv "${{ needs.sdist.outputs.artifact }}/openslide-winbuild-${{ inputs.pkgver }}"/* .
          rm -r "${{ needs.sdist.outputs.artifact }}"
      - name: Download overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        uses: actions/download-artifact@v3
        with:
          name: build-overrides
      - name: Unpack overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        run: tar xf overrides.tar
      - name: Build binary zip
        run: |
          suffix="${{ needs.sdist.outputs.version_suffix }}"
          werror=
          if [ "${{ inputs.werror }}" = true ]; then
              werror="-w"
          fi
          ./build.sh -m${{ matrix.bits }} ${suffix:+-s$suffix} \
              -p "${{ inputs.pkgver }}" $werror bdist
          mkdir -p "artifacts/${{ needs.sdist.outputs.artifact }}"
          mv "openslide-win${{ matrix.bits }}-${{ inputs.pkgver }}.zip" \
              "artifacts/${{ needs.sdist.outputs.artifact }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.sdist.outputs.artifact }}
          path: artifacts

  smoke:
    name: Smoke test
    needs: [sdist, bdist]
    runs-on: windows-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.sdist.outputs.artifact }}
      - name: Unpack artifacts
        shell: bash
        run: |
          for bits in 32 64; do
              unzip "${{ needs.sdist.outputs.artifact }}/openslide-win${bits}-${{ inputs.pkgver }}.zip"
          done
      - name: Smoke test
        shell: bash
        run: |
          for bits in 32 64; do
              echo "======== ${bits}-bit ========"
              cd "${GITHUB_WORKSPACE}/openslide-win${bits}-${{ inputs.pkgver }}/bin"
              if [ -e slidetool.exe ]; then
                  showprops="./slidetool.exe prop list"
              else
                  # OpenSlide 3.4.1
                  showprops="./openslide-show-properties.exe"
              fi
              OPENSLIDE_DEBUG=? $showprops 2> conftest ||:
              if ! grep -q "  synthetic  " conftest; then
                  # OpenSlide 3.4.1
                  echo "Smoke test not supported in this OpenSlide version"
                  continue
              fi
              OPENSLIDE_DEBUG=synthetic $showprops ""
          done
