# Reusable workflow for building binaries

name: Binaries

on:
  workflow_call:
    inputs:
      linux_builder_repo_and_digest:
        # Use .github/find-container-digest action to get this
        description: |
          Docker repo and image digest of the Linux builder container, or
          empty to skip Linux build
        required: false
        type: string
      macos_enable:
        description: Build macOS binaries
        required: false
        type: boolean
        default: false
      openslide_repo:
        description: Override OpenSlide with this repo
        required: false
        type: string
      openslide_ref:
        description: Override OpenSlide with this openslide_repo ref
        required: false
        type: string
      openslide_java_repo:
        description: Override OpenSlide Java with this repo
        required: false
        type: string
      openslide_java_ref:
        description: Override OpenSlide Java with this openslide_java_repo ref
        required: false
        type: string
      openslide_bin_repo:
        description: Use openslide-bin from this repo
        required: false
        type: string
        default: openslide/openslide-bin
      openslide_bin_ref:
        description: Use openslide-bin from this ref
        required: false
        type: string
        default: main
      suffix:
        description: Set package version suffix
        required: true
        type: string
      werror:
        description: Fail on build warnings in OpenSlide packages
        required: false
        type: boolean
        default: false
      windows_builder_repo_and_digest:
        # Use .github/find-container-digest action to get this
        description: |
          Docker repo and image digest of the Windows builder container
        required: true
        type: string
    outputs:
      version:
        description: The version of the output artifacts
        value: ${{ jobs.sdist.outputs.version }}

permissions:
  contents: read

jobs:
  sdist:
    name: Source tarball
    runs-on: ubuntu-latest
    container: ${{ inputs.windows_builder_repo_and_digest }}
    outputs:
      archive_base: ${{ steps.prep.outputs.archive_base }}
      archive: ${{ steps.prep.outputs.archive }}
      systems: ${{ steps.systems.outputs.systems }}
      version: ${{ steps.prep.outputs.version }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.openslide_bin_repo }}
          ref: ${{ inputs.openslide_bin_ref }}

      - name: Check out OpenSlide
        if: inputs.openslide_repo != ''
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.openslide_repo }}
          ref: ${{ inputs.openslide_ref }}
          # make sure "git describe" works
          fetch-depth: 0
          path: override/openslide
          persist-credentials: false
      - name: Check out OpenSlide Java
        if: inputs.openslide_java_repo != ''
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.openslide_java_repo }}
          ref: ${{ inputs.openslide_java_ref }}
          # make sure "git describe" works
          fetch-depth: 0
          path: override/openslide-java
          persist-credentials: false
      - name: Collect overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        run: tar cf overrides.tar override
      - name: Upload overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        uses: actions/upload-artifact@v4
        with:
          name: build-overrides
          path: overrides.tar

      - name: Cache sources
        uses: actions/cache@v4
        with:
          key: build-packagecache
          path: subprojects/packagecache
          save-always: true
      - name: Build source tarball
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          ./bintool sdist -x "${{ inputs.suffix }}"
      - name: Prep archive
        id: prep
        run: |
          version=$(./bintool version -x "${{ inputs.suffix }}")
          echo "version=$version" >> $GITHUB_OUTPUT
          archive_base="openslide-bin-${version}"
          echo "archive_base=$archive_base" >> $GITHUB_OUTPUT
          echo "archive=${archive_base}.tar.gz" >> $GITHUB_OUTPUT
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prep.outputs.archive }}
          path: ${{ steps.prep.outputs.archive }}
          compression-level: 0

      - name: Compute bdist systems
        id: systems
        shell: python
        run: |
          import json, os
          sys_map = {
              '${{ inputs.linux_builder_repo_and_digest }}': 'linux',
              '${{ inputs.macos_enable && 'true' || '' }}': 'macos',
              '${{ inputs.windows_builder_repo_and_digest }}': 'windows',
          }
          systems = json.dumps(sorted(v for k, v in sys_map.items() if k))
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              fh.write(f'systems={systems}\n')

  bdist:
    name: Binaries
    needs: sdist
    strategy:
      matrix:
        os: ${{ fromJson(needs.sdist.outputs.systems) }}
    runs-on: ${{ matrix.os == 'macos' && 'macos-14' || 'ubuntu-latest' }}
    container: ${{ matrix.os == 'linux' && inputs.linux_builder_repo_and_digest || (matrix.os == 'windows' && inputs.windows_builder_repo_and_digest || null) }}
    steps:
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos'
        run: |
          # https://github.com/actions/setup-python/issues/577
          # https://github.com/q3aiml/ledger/commit/f53b35ae
          brew list -1 | grep python@ | while read formula; do
              brew unlink $formula
              brew link --overwrite $formula
          done
          brew update
          # python-packaging needed by glib
          brew install meson python-packaging
          python3 -m pip install --break-system-packages tomli
      - name: Download source tarball
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.sdist.outputs.archive }}
      - name: Unpack source tarball
        run: |
          tar xf "${{ needs.sdist.outputs.archive }}"
          mv "${{ needs.sdist.outputs.archive_base }}"/* .
          rm -r "${{ needs.sdist.outputs.archive_base }}" \
              "${{ needs.sdist.outputs.archive }}"
      - name: Download overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        uses: actions/download-artifact@v4
        with:
          name: build-overrides
      - name: Unpack overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        run: tar xf overrides.tar && rm overrides.tar
      - name: Build
        id: build
        run: |
          werror=
          if [ "${{ inputs.werror }}" = true ]; then
              werror="-w"
          fi
          ./bintool bdist -x "${{ inputs.suffix }}" $werror
          archive=$(echo openslide-bin-"${{ needs.sdist.outputs.version }}"-*)
          echo "archive=$archive" >> $GITHUB_OUTPUT
          wheel=$(echo openslide_bin-"${{ needs.sdist.outputs.version }}"-*-*-*.whl)
          echo "wheel=$wheel" >> $GITHUB_OUTPUT
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.archive }}
          path: ${{ steps.build.outputs.archive }}
          compression-level: 0
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.wheel }}
          path: ${{ steps.build.outputs.wheel }}
          compression-level: 0

  finalize:
    name: Finalize
    needs: [sdist, bdist]
    runs-on: windows-latest
    steps:
      - name: Update Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Download archives
        uses: actions/download-artifact@v4
        with:
          pattern: "openslide[-_]bin-${{ needs.sdist.outputs.version }}*"
          path: archives
          merge-multiple: true
      - name: Unpack source tarball
        shell: bash
        run: |
          tar xf "archives/openslide-bin-${{ needs.sdist.outputs.version }}.tar.gz"
          mv "openslide-bin-${{ needs.sdist.outputs.version }}"/* .
          rm -r "openslide-bin-${{ needs.sdist.outputs.version }}"
      - name: Report package versions
        shell: bash
        run: |
          shopt -s nullglob
          ./bintool versions \
              "archives/openslide-bin-${{ needs.sdist.outputs.version }}"-*.{tar.xz,zip} \
              >> $GITHUB_STEP_SUMMARY
      - name: Windows smoke test
        shell: bash
        run: |
          ./bintool smoke \
              "archives/openslide-bin-${{ needs.sdist.outputs.version }}-windows-x64.zip" \
              "archives/openslide_bin-${{ needs.sdist.outputs.version }}-py3-none-win_amd64.whl"
