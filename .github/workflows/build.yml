# Reusable workflow for building binaries

name: Binaries

on:
  workflow_call:
    inputs:
      linux_builder_repo_and_digest:
        # Use .github/find-container-digest action to get this
        description: |
          Docker repo and image digest of the Linux builder container, or
          empty to skip Linux build
        required: false
        type: string
      macos_enable:
        description: Build macOS binaries
        required: false
        type: boolean
        default: false
      openslide_repo:
        description: Override OpenSlide with this repo
        required: false
        type: string
      openslide_ref:
        description: Override OpenSlide with this openslide_repo ref
        required: false
        type: string
      openslide_java_repo:
        description: Override OpenSlide Java with this repo
        required: false
        type: string
      openslide_java_ref:
        description: Override OpenSlide Java with this openslide_java_repo ref
        required: false
        type: string
      openslide_bin_repo:
        description: Use openslide-bin from this repo
        required: false
        type: string
        default: openslide/openslide-bin
      openslide_bin_ref:
        description: Use openslide-bin from this ref
        required: false
        type: string
        default: main
      suffix:
        description: Set package version suffix
        required: true
        type: string
      werror:
        description: Fail on build warnings in OpenSlide packages
        required: false
        type: boolean
        default: false
      windows_builder_repo_and_digest:
        # Use .github/find-container-digest action to get this
        description: |
          Docker repo and image digest of the Windows builder container
        required: true
        type: string
    outputs:
      artifact:
        description: The name of the output artifact
        value: ${{ jobs.sdist.outputs.artifact }}
      version:
        description: The version of the output artifact
        value: ${{ jobs.sdist.outputs.version }}

permissions:
  contents: read

jobs:
  sdist:
    name: Source tarball
    runs-on: ubuntu-latest
    container: ${{ inputs.windows_builder_repo_and_digest }}
    outputs:
      artifact: ${{ steps.prep.outputs.artifact }}
      version: ${{ steps.prep.outputs.version }}
      version_suffix: ${{ steps.prep.outputs.version_suffix }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.openslide_bin_repo }}
          ref: ${{ inputs.openslide_bin_ref }}

      - name: Check out OpenSlide
        if: inputs.openslide_repo != ''
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.openslide_repo }}
          ref: ${{ inputs.openslide_ref }}
          # make sure "git describe" works
          fetch-depth: 0
          path: override/openslide
          persist-credentials: false
      - name: Check out OpenSlide Java
        if: inputs.openslide_java_repo != ''
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.openslide_java_repo }}
          ref: ${{ inputs.openslide_java_ref }}
          # make sure "git describe" works
          fetch-depth: 0
          path: override/openslide_java
          persist-credentials: false
      - name: Collect overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        run: tar cf overrides.tar override
      - name: Upload overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        uses: actions/upload-artifact@v3
        with:
          name: build-overrides
          path: overrides.tar

      - name: Cache sources
        uses: actions/cache@v3
        with:
          key: build-packagecache
          path: subprojects/packagecache
      - name: Build source tarball
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          ./build.sh -x "${{ inputs.suffix }}" sdist
      - name: Prep artifact
        id: prep
        run: |
          version=$(./build.sh -x "${{ inputs.suffix }}" version)
          echo "version=$version" >> $GITHUB_OUTPUT
          artifact="openslide-windows-${version}"
          echo "artifact=$artifact" >> $GITHUB_OUTPUT
          mkdir -p "output/$artifact"
          mv "openslide-bin-${version}.tar.gz" "output/$artifact"
          if [ -d override/openslide ]; then
              suffix=$(git -C override/openslide rev-parse HEAD | cut -c-7)
              echo "version_suffix=$suffix" >> $GITHUB_OUTPUT
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prep.outputs.artifact }}
          path: output

  windows:
    name: Windows
    needs: sdist
    runs-on: ubuntu-latest
    container: ${{ inputs.windows_builder_repo_and_digest }}
    steps:
      - name: Download source tarball
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.sdist.outputs.artifact }}
      - name: Unpack source tarball
        run: |
          (cd "${{ needs.sdist.outputs.artifact }}" &&
              tar xf "openslide-bin-${{ needs.sdist.outputs.version }}.tar.gz")
          mv "${{ needs.sdist.outputs.artifact }}/openslide-bin-${{ needs.sdist.outputs.version }}"/* .
          rm -r "${{ needs.sdist.outputs.artifact }}"
      - name: Download overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        uses: actions/download-artifact@v3
        with:
          name: build-overrides
      - name: Unpack overrides
        if: inputs.openslide_repo != '' || inputs.openslide_java_repo != ''
        run: tar xf overrides.tar
      - name: Build binary zip
        run: |
          suffix="${{ needs.sdist.outputs.version_suffix }}"
          werror=
          if [ "${{ inputs.werror }}" = true ]; then
              werror="-w"
          fi
          ./build.sh ${suffix:+-s$suffix} -x "${{ inputs.suffix }}" \
              $werror bdist
          mkdir -p "output/${{ needs.sdist.outputs.artifact }}"
          mv "openslide-bin-${{ needs.sdist.outputs.version }}-windows-x64.zip" \
              "output/${{ needs.sdist.outputs.artifact }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.sdist.outputs.artifact }}
          path: output

  windows-smoke:
    name: Windows smoke test
    needs: [sdist, windows]
    runs-on: windows-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.sdist.outputs.artifact }}
      - name: Unpack artifact
        shell: bash
        run: unzip "${{ needs.sdist.outputs.artifact }}/openslide-bin-${{ needs.sdist.outputs.version }}-windows-x64.zip"
      - name: Report package versions
        shell: bash
        run: cat "openslide-bin-${{ needs.sdist.outputs.version }}-windows-x64/VERSIONS.md" >> $GITHUB_STEP_SUMMARY
      - name: Smoke test
        shell: bash
        run: |
          cd "${GITHUB_WORKSPACE}/openslide-bin-${{ needs.sdist.outputs.version }}-windows-x64/bin"
          OPENSLIDE_DEBUG=synthetic ./slidetool.exe prop list ""
